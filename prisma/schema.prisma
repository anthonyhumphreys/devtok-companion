// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  // SaaS specific fields
  tier          SubscriptionTier @default(FREE)
  stripeCustomerId String?
  subscriptionId   String?
  subscriptionStatus String?
  
  // Profile fields
  tiktokUsername String?
  bio           String?
  website       String?
  customDomain  String?
  
  accounts      Account[]
  sessions      Session[]
  snippets      Snippet[]
  analytics     Analytics[]
  
  @@map(name: "users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([provider, providerAccountId])
  @@map(name: "accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map(name: "sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  
  @@unique([identifier, token])
  @@map(name: "verificationtokens")
}

model Snippet {
  id          String   @id @default(cuid())
  title       String
  description String?
  code        String
  language    String
  isPublic    Boolean  @default(true)
  views       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // TikTok integration
  tiktokVideoId String?
  tiktokUrl     String?
  
  // SEO and sharing
  slug        String   @unique
  metaTitle   String?
  metaDescription String?
  
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  analytics   Analytics[]
  
  @@map(name: "snippets")
}

model Analytics {
  id        String   @id @default(cuid())
  snippetId String
  userId    String
  event     String   // 'view', 'copy', 'share'
  userAgent String?
  ip        String?
  country   String?
  referrer  String?
  createdAt DateTime @default(now())
  
  snippet   Snippet  @relation(fields: [snippetId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map(name: "analytics")
}

enum SubscriptionTier {
  FREE
  PRO
  TEAM
}
